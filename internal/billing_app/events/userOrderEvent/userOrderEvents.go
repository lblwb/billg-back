package userOrderEvent

import (
	"backend/internal/billing_app/models/order"
	"backend/pkg/events"
	"encoding/json"
	"fmt"
	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
	"log"
	"strings"
)

//type EventUserOrder struct {
//	// –î–∞–Ω–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è
//	UserOrder order.UserOrderServices
//}

// –í–∞—à —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
const telegramBotToken = "6605794583:AAFmhnarpaJrrdRLQh9YPSIilBlM76KT8Ng"

// ID —á–∞—Ç–∞ –∞–¥–º–∏–Ω–∞, –∫—É–¥–∞ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ
const adminChatID = 1248134771

func telegramSendMsgIds(adminsIds []int64, combinedMsgString string, keyboardRow []tgbotapi.InlineKeyboardButton) {
	for _, ChatId := range adminsIds {
		//fmt.Println(ChatId, combinedMsgString)

		// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram
		//if userTgId != 0 {
		msg := tgbotapi.NewMessage(int64(ChatId), combinedMsgString)
		msg.ParseMode = tgbotapi.ModeMarkdown
		msg.ReplyMarkup = tgbotapi.NewInlineKeyboardMarkup(keyboardRow)
		//

		bot, _ := tgbotapi.NewBotAPI(telegramBotToken)
		// –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
		_, err := bot.Send(msg)
		if err != nil {
			log.Println("err: ", err)
		}
	}
}

func sendNewOrderByTelegram(adminsIds []int64, service *order.UserOrderServices) {
	var arrMsg []string
	//var paramTagsText string
	var deviceName string

	if len(service.Services) > 0 {
		//fmt.Println("SERVDF===>", service.Services[0].Service)
		deviceName = service.Services[0].Service.FullName
	}

	// –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç—Ä–æ–∫–∏ –≤ —Å—Ä–µ–∑
	arrMsg = append(arrMsg,
		"üí∏üî• ‚Äî‚Äî‚Äî –ù–û–í–´–ô –ó–ê–ö–ê–ó ‚Äî‚Äî‚Äî üí∏üî•\n",
		"----",
		"–û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ -> "+deviceName,
		//service.,
		"----\n",
	)

	if len(service.OrderParams) > 0 {
		//if paramTagsText != "" {
		//	tags = strings.Split(paramTagsText, ",")
		//}

		// –ò—Å–ø–æ–ª—å–∑—É–µ–º map[string]interface{} –¥–ª—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–≥–æ —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
		var data map[string]map[string]interface{}

		if err := json.Unmarshal([]byte(service.OrderParams), &data); err != nil {
			fmt.Println("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–∑–±–æ—Ä–µ JSON:", err)
		}

		arrMsg = append(arrMsg, fmt.Sprintf("‚òïÔ∏èü§ì –£—Å–ª—É–≥–∏: \n"))

		// –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º –≤—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∏ –≤—ã–≤–æ–¥–∏–º –¥–∞–Ω–Ω—ã–µ
		for componentName, componentData := range data {
			arrMsg = append(arrMsg, fmt.Sprintf("‚Äî‚Äî> %s: | –¶–µ–Ω–∞: %v | –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ %v \n", componentName, componentData["price"], componentData["value"]))
			//fmt.Printf("%s:\n", componentName)
			//fmt.Printf("price: %v\ncount: %v\n", componentData["price"], componentData["value"])
			//fmt.Println()
		}

	}

	// –û–±—ä–µ–¥–∏–Ω—è–µ–º –≤—Å–µ —Å—Ç—Ä–æ–∫–∏ –≤ –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É —Å –ø–µ—Ä–µ–Ω–æ—Å–∞–º–∏ —Å—Ç—Ä–æ–∫
	combinedMsgString := strings.Join(arrMsg, "\n")

	//
	var keyboardRow = tgbotapi.NewInlineKeyboardRow(
		tgbotapi.NewInlineKeyboardButtonURL(
			fmt.Sprintf("üí∞–ü—Ä–∏–Ω—è—Ç—å –∑–∞–∫–∞–∑ ‚Äî —Å—É–º. %d –†—É–±.", int64(service.TotalAmount)),
			"https://retryhost.ru/"),
	)

	// Send msg
	telegramSendMsgIds(adminsIds, combinedMsgString, keyboardRow)
}

func Handle(event events.Event) {
	//
	userOrderService := event.Data.(*order.UserOrderServices)

	sendNewOrderByTelegram([]int64{
		1248134771,
		2015896349,
	}, userOrderService)

	//fmt.Println(event)

	// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–±—ã—Ç–∏—è NewOrderEvent
	//fmt.Printf("Received a new order event: OrderID=%d, OrderName=%s\n", userOrderService.ID, userOrderService.OrderParams)
	// –í—ã –º–æ–∂–µ—Ç–µ –≤—ã–ø–æ–ª–Ω—è—Ç—å –∑–¥–µ—Å—å –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é –ª–æ–≥–∏–∫—É, –Ω–∞–ø—Ä–∏–º–µ—Ä, —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–∫—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π.
}
